"""Intial Migration

Revision ID: 66ed1602fcc0
Revises: 
Create Date: 2024-04-02 11:38:17.892606

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '66ed1602fcc0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cash_bonus_discount',
    sa.Column('cash_bonus_discount_id', sa.UUID(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('cash_bonus_discount_id')
    )
    op.create_index(op.f('ix_cash_bonus_discount_cash_bonus_discount_id'), 'cash_bonus_discount', ['cash_bonus_discount_id'], unique=False)
    op.create_table('cricket_player',
    sa.Column('cricket_player_id', sa.UUID(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('thumb_url', sa.String(), nullable=True),
    sa.Column('team', sa.String(), nullable=True),
    sa.Column('playing_role', sa.String(), nullable=True),
    sa.Column('batting_style', sa.String(), nullable=True),
    sa.Column('bowling_style', sa.String(), nullable=True),
    sa.Column('batting_stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('bowling_stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('cricket_player_id'),
    sa.UniqueConstraint('player_id')
    )
    op.create_index(op.f('ix_cricket_player_cricket_player_id'), 'cricket_player', ['cricket_player_id'], unique=False)
    op.create_table('cricket_series',
    sa.Column('cricket_series_id', sa.UUID(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('fc_name', sa.String(), nullable=True),
    sa.Column('use_name', sa.Boolean(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('series_category', sa.String(), nullable=True),
    sa.Column('series_type', sa.String(), nullable=True),
    sa.Column('series_start_date', sa.DateTime(), nullable=True),
    sa.Column('series_end_date', sa.DateTime(), nullable=True),
    sa.Column('team_id', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('is_live', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('cricket_series_id'),
    sa.UniqueConstraint('series_id')
    )
    op.create_index(op.f('ix_cricket_series_cricket_series_id'), 'cricket_series', ['cricket_series_id'], unique=False)
    op.create_table('cricket_team',
    sa.Column('cricket_team_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fc_short_name', sa.String(), nullable=True),
    sa.Column('use_short_name', sa.Boolean(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('team_type', sa.String(), nullable=True),
    sa.Column('thumb_url', sa.String(), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('fc_logo_url', sa.String(), nullable=True),
    sa.Column('use_logo_url', sa.Boolean(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('cricket_team_id'),
    sa.UniqueConstraint('team_id')
    )
    op.create_index(op.f('ix_cricket_team_cricket_team_id'), 'cricket_team', ['cricket_team_id'], unique=False)
    op.create_table('email_otp',
    sa.Column('email_otp_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('otp', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('email_otp_id')
    )
    op.create_index(op.f('ix_email_otp_email_otp_id'), 'email_otp', ['email_otp_id'], unique=False)
    op.create_table('gst',
    sa.Column('gst_id', sa.UUID(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('gst_id')
    )
    op.create_index(op.f('ix_gst_gst_id'), 'gst', ['gst_id'], unique=False)
    op.create_table('home_screen',
    sa.Column('homescreen_id', sa.UUID(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('homescreen_id')
    )
    op.create_index(op.f('ix_home_screen_homescreen_id'), 'home_screen', ['homescreen_id'], unique=False)
    op.create_table('master_country',
    sa.Column('country_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('country_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_master_country_country_id'), 'master_country', ['country_id'], unique=False)
    op.create_table('mobile_otp',
    sa.Column('mobile_otp_id', sa.UUID(), nullable=False),
    sa.Column('mobile', sa.String(), nullable=False),
    sa.Column('otp', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('mobile_otp_id')
    )
    op.create_index(op.f('ix_mobile_otp_mobile_otp_id'), 'mobile_otp', ['mobile_otp_id'], unique=False)
    op.create_table('tds',
    sa.Column('tds_id', sa.UUID(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('tds_id')
    )
    op.create_index(op.f('ix_tds_tds_id'), 'tds', ['tds_id'], unique=False)
    op.create_table('cricket_match',
    sa.Column('cricket_match_id', sa.UUID(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.UUID(), nullable=False),
    sa.Column('match_format', sa.String(), nullable=True),
    sa.Column('team_a', sa.UUID(), nullable=False),
    sa.Column('team_b', sa.UUID(), nullable=False),
    sa.Column('match_start_time', sa.DateTime(), nullable=True),
    sa.Column('match_end_time', sa.DateTime(), nullable=True),
    sa.Column('last_update_on', sa.DateTime(), nullable=True),
    sa.Column('is_live', sa.Boolean(), nullable=True),
    sa.Column('is_point_added', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['cricket_series.cricket_series_id'], ),
    sa.ForeignKeyConstraint(['team_a'], ['cricket_team.cricket_team_id'], ),
    sa.ForeignKeyConstraint(['team_b'], ['cricket_team.cricket_team_id'], ),
    sa.PrimaryKeyConstraint('cricket_match_id'),
    sa.UniqueConstraint('match_id')
    )
    op.create_index(op.f('ix_cricket_match_cricket_match_id'), 'cricket_match', ['cricket_match_id'], unique=False)
    op.create_table('cricket_series_squad',
    sa.Column('cricket_series_squad_id', sa.UUID(), nullable=False),
    sa.Column('series_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('player_id', sa.ARRAY(sa.UUID()), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['cricket_series.cricket_series_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['cricket_team.cricket_team_id'], ),
    sa.PrimaryKeyConstraint('cricket_series_squad_id')
    )
    op.create_index(op.f('ix_cricket_series_squad_cricket_series_squad_id'), 'cricket_series_squad', ['cricket_series_squad_id'], unique=False)
    op.create_table('master_state',
    sa.Column('state_id', sa.UUID(), nullable=False),
    sa.Column('country', sa.UUID(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['country'], ['master_country.country_id'], ),
    sa.PrimaryKeyConstraint('state_id'),
    sa.UniqueConstraint('country', 'state', name='unique_state')
    )
    op.create_index(op.f('ix_master_state_state_id'), 'master_state', ['state_id'], unique=False)
    op.create_table('cricket_series_match_point',
    sa.Column('cricket_series_match_point_id', sa.UUID(), nullable=False),
    sa.Column('cricket_series_id', sa.UUID(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('cricket_match_id', sa.UUID(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('cricket_player_id', sa.UUID(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('points', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['cricket_match_id'], ['cricket_match.cricket_match_id'], ),
    sa.ForeignKeyConstraint(['cricket_player_id'], ['cricket_player.cricket_player_id'], ),
    sa.ForeignKeyConstraint(['cricket_series_id'], ['cricket_series.cricket_series_id'], ),
    sa.PrimaryKeyConstraint('cricket_series_match_point_id')
    )
    op.create_index(op.f('ix_cricket_series_match_point_cricket_series_match_point_id'), 'cricket_series_match_point', ['cricket_series_match_point_id'], unique=False)
    op.create_table('master_city',
    sa.Column('city_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.UUID(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['state'], ['master_state.state_id'], ),
    sa.PrimaryKeyConstraint('city_id'),
    sa.UniqueConstraint('state', 'city', name='unique_city')
    )
    op.create_index(op.f('ix_master_city_city_id'), 'master_city', ['city_id'], unique=False)
    op.create_table('user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.UUID(), nullable=True),
    sa.Column('state', sa.UUID(), nullable=True),
    sa.Column('country', sa.UUID(), nullable=True),
    sa.Column('pin_code', sa.String(), nullable=True),
    sa.Column('team_name', sa.String(), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['city'], ['master_city.city_id'], ),
    sa.ForeignKeyConstraint(['country'], ['master_country.country_id'], ),
    sa.ForeignKeyConstraint(['state'], ['master_state.state_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile')
    )
    op.create_index(op.f('ix_user_user_id'), 'user', ['user_id'], unique=False)
    op.create_table('bank_verification',
    sa.Column('bank_verification_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_number', sa.String(length=255), nullable=False),
    sa.Column('ifsc_code', sa.String(length=255), nullable=False),
    sa.Column('bank_name', sa.String(length=255), nullable=False),
    sa.Column('branch_name', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('bank_s3_url', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('UNVERIFIED', 'REJECTED', 'VERIFIED', name='bankverificationenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('bank_verification_id')
    )
    op.create_index(op.f('ix_bank_verification_bank_verification_id'), 'bank_verification', ['bank_verification_id'], unique=False)
    op.create_table('gst_calculation',
    sa.Column('gst_calculation_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('gst_value', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('gst_calculation_id')
    )
    op.create_index(op.f('ix_gst_calculation_gst_calculation_id'), 'gst_calculation', ['gst_calculation_id'], unique=False)
    op.create_table('notification',
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('is_pushed', sa.Boolean(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notification_notification_id'), 'notification', ['notification_id'], unique=False)
    op.create_table('pan_verification',
    sa.Column('pan_verfication_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('pan_name', sa.String(length=255), nullable=False),
    sa.Column('pan_number', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('pan_s3_url', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('UNVERIFIED', 'REJECTED', 'VERIFIED', name='verificationenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('pan_verfication_id')
    )
    op.create_index(op.f('ix_pan_verification_pan_verfication_id'), 'pan_verification', ['pan_verfication_id'], unique=False)
    op.create_table('tds_calculation',
    sa.Column('tds_calculation_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('tds_value', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('tds_calculation_id')
    )
    op.create_index(op.f('ix_tds_calculation_tds_calculation_id'), 'tds_calculation', ['tds_calculation_id'], unique=False)
    op.create_table('user_balance',
    sa.Column('balance_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('added_amount', sa.Float(), nullable=True),
    sa.Column('winning_amount', sa.Float(), nullable=True),
    sa.Column('cash_bonus_amount', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('balance_id')
    )
    op.create_index(op.f('ix_user_balance_balance_id'), 'user_balance', ['balance_id'], unique=False)
    op.create_table('user_device',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('device_token', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('device_id')
    )
    op.create_index(op.f('ix_user_device_device_id'), 'user_device', ['device_id'], unique=False)
    op.create_table('user_draft',
    sa.Column('user_draft_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('league_name', sa.String(), nullable=True),
    sa.Column('invitation_code', sa.String(), nullable=True),
    sa.Column('max_playing_user', sa.Integer(), nullable=True),
    sa.Column('entry_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('fantasy_commission', sa.Float(), nullable=True),
    sa.Column('winners_price', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('player_choice', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('draft_for', sa.Enum('SERIES', 'MATCH', name='draftforenum'), nullable=True),
    sa.Column('draft_match_series_id', sa.UUID(), nullable=True),
    sa.Column('is_draft_completed', sa.Boolean(), nullable=True),
    sa.Column('is_result_announce', sa.Boolean(), nullable=True),
    sa.Column('is_draft_cancelled', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_captain_allowed', sa.Boolean(), nullable=True),
    sa.Column('is_cancelled_pushed', sa.Boolean(), nullable=True),
    sa.Column('is_draft_pushed', sa.Boolean(), nullable=True),
    sa.Column('number_of_round', sa.Integer(), nullable=True),
    sa.Column('top_picks', sa.Integer(), nullable=True),
    sa.Column('draft_starting_time', sa.DateTime(), nullable=True),
    sa.Column('player_selected', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('match_id_point', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_draft_id')
    )
    op.create_index(op.f('ix_user_draft_user_draft_id'), 'user_draft', ['user_draft_id'], unique=False)
    op.create_table('user_transaction',
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('transaction_type', sa.Enum('DEPOSIT_MONEY', 'JOIN_CONTEST', 'WON_MONEY', 'CASH_BONUS', 'WITHDRAW_MONEY', 'CANCELLED_CONTEST', name='transactiontypeenum'), nullable=True),
    sa.Column('transaction_status', sa.Enum('COMPLETED', 'FAILED', 'PENDING', name='transactionstatusenum'), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('deduct_add', sa.Float(), nullable=True),
    sa.Column('deduct_win', sa.Float(), nullable=True),
    sa.Column('deduct_cash', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_user_transaction_transaction_id'), 'user_transaction', ['transaction_id'], unique=False)
    op.create_table('contest_player',
    sa.Column('contest_player_id', sa.UUID(), nullable=False),
    sa.Column('draft_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('player_selected', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('captain', sa.UUID(), nullable=True),
    sa.Column('vice_captain', sa.UUID(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('points', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('UPCOMING', 'LIVE', 'COMPLETED', name='conteststatusenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['captain'], ['cricket_player.cricket_player_id'], ),
    sa.ForeignKeyConstraint(['draft_id'], ['user_draft.user_draft_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['vice_captain'], ['cricket_player.cricket_player_id'], ),
    sa.PrimaryKeyConstraint('contest_player_id')
    )
    op.create_index(op.f('ix_contest_player_contest_player_id'), 'contest_player', ['contest_player_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_contest_player_contest_player_id'), table_name='contest_player')
    op.drop_table('contest_player')
    op.drop_index(op.f('ix_user_transaction_transaction_id'), table_name='user_transaction')
    op.drop_table('user_transaction')
    op.drop_index(op.f('ix_user_draft_user_draft_id'), table_name='user_draft')
    op.drop_table('user_draft')
    op.drop_index(op.f('ix_user_device_device_id'), table_name='user_device')
    op.drop_table('user_device')
    op.drop_index(op.f('ix_user_balance_balance_id'), table_name='user_balance')
    op.drop_table('user_balance')
    op.drop_index(op.f('ix_tds_calculation_tds_calculation_id'), table_name='tds_calculation')
    op.drop_table('tds_calculation')
    op.drop_index(op.f('ix_pan_verification_pan_verfication_id'), table_name='pan_verification')
    op.drop_table('pan_verification')
    op.drop_index(op.f('ix_notification_notification_id'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_gst_calculation_gst_calculation_id'), table_name='gst_calculation')
    op.drop_table('gst_calculation')
    op.drop_index(op.f('ix_bank_verification_bank_verification_id'), table_name='bank_verification')
    op.drop_table('bank_verification')
    op.drop_index(op.f('ix_user_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_master_city_city_id'), table_name='master_city')
    op.drop_table('master_city')
    op.drop_index(op.f('ix_cricket_series_match_point_cricket_series_match_point_id'), table_name='cricket_series_match_point')
    op.drop_table('cricket_series_match_point')
    op.drop_index(op.f('ix_master_state_state_id'), table_name='master_state')
    op.drop_table('master_state')
    op.drop_index(op.f('ix_cricket_series_squad_cricket_series_squad_id'), table_name='cricket_series_squad')
    op.drop_table('cricket_series_squad')
    op.drop_index(op.f('ix_cricket_match_cricket_match_id'), table_name='cricket_match')
    op.drop_table('cricket_match')
    op.drop_index(op.f('ix_tds_tds_id'), table_name='tds')
    op.drop_table('tds')
    op.drop_index(op.f('ix_mobile_otp_mobile_otp_id'), table_name='mobile_otp')
    op.drop_table('mobile_otp')
    op.drop_index(op.f('ix_master_country_country_id'), table_name='master_country')
    op.drop_table('master_country')
    op.drop_index(op.f('ix_home_screen_homescreen_id'), table_name='home_screen')
    op.drop_table('home_screen')
    op.drop_index(op.f('ix_gst_gst_id'), table_name='gst')
    op.drop_table('gst')
    op.drop_index(op.f('ix_email_otp_email_otp_id'), table_name='email_otp')
    op.drop_table('email_otp')
    op.drop_index(op.f('ix_cricket_team_cricket_team_id'), table_name='cricket_team')
    op.drop_table('cricket_team')
    op.drop_index(op.f('ix_cricket_series_cricket_series_id'), table_name='cricket_series')
    op.drop_table('cricket_series')
    op.drop_index(op.f('ix_cricket_player_cricket_player_id'), table_name='cricket_player')
    op.drop_table('cricket_player')
    op.drop_index(op.f('ix_cash_bonus_discount_cash_bonus_discount_id'), table_name='cash_bonus_discount')
    op.drop_table('cash_bonus_discount')
    # ### end Alembic commands ###
